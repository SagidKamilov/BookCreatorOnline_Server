"""Initial migrate db

Revision ID: b8ee58780e24
Revises: 1251ba61bd11
Create Date: 2024-06-01 17:16:40.852583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8ee58780e24'
down_revision: Union[str, None] = '1251ba61bd11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Carrier',
    sa.Column('company_name', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('inn_carrier', sa.Integer(), nullable=True),
    sa.Column('ogrn_carrier', sa.Integer(), nullable=False),
    sa.Column('kpp_customer', sa.Integer(), nullable=False),
    sa.Column('checking_account', sa.Boolean(), nullable=True),
    sa.Column('correpondent_account', sa.Boolean(), nullable=False),
    sa.Column('bic', sa.String(length=650), nullable=True),
    sa.Column('actual_address', sa.String(length=400), nullable=True),
    sa.Column('legal_address', sa.String(length=400), nullable=True),
    sa.Column('date_registration', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_foundation', sa.DateTime(timezone=True), nullable=False),
    sa.Column('taken_orders', sa.Integer(), nullable=False),
    sa.Column('completed_orders', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Carrier_company_name'), 'Carrier', ['company_name'], unique=False)
    op.create_table('Customer',
    sa.Column('company_name', sa.String(length=350), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('inn_customer', sa.Integer(), nullable=True),
    sa.Column('ogrn_customer', sa.Integer(), nullable=False),
    sa.Column('kpp_customer', sa.Integer(), nullable=False),
    sa.Column('checking_account', sa.Boolean(), nullable=True),
    sa.Column('correpondent_account', sa.Boolean(), nullable=False),
    sa.Column('bic', sa.String(length=650), nullable=True),
    sa.Column('actual_address', sa.String(length=400), nullable=True),
    sa.Column('legal_address', sa.String(length=400), nullable=True),
    sa.Column('date_registration', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_foundation', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_orders', sa.Integer(), nullable=False),
    sa.Column('completed_orders', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Customer_company_name'), 'Customer', ['company_name'], unique=False)
    op.create_table('Car',
    sa.Column('name_car', sa.String(length=250), nullable=True),
    sa.Column('body_type', sa.String(length=150), nullable=True),
    sa.Column('body_dimensions', sa.String(length=150), nullable=True),
    sa.Column('car_registration_number', sa.Integer(), nullable=True),
    sa.Column('car_brand_photo', sa.Text(), nullable=True),
    sa.Column('photo_car_passport_main', sa.Text(), nullable=True),
    sa.Column('photo_car_passport_additional', sa.Text(), nullable=True),
    sa.Column('trailer_name', sa.String(length=200), nullable=False),
    sa.Column('trailer_registration_number', sa.Integer(), nullable=False),
    sa.Column('photo_trailer_passport_main', sa.Text(), nullable=False),
    sa.Column('photo_trailer_passport_additional', sa.Text(), nullable=False),
    sa.Column('workload_car', sa.Boolean(), nullable=False),
    sa.Column('id_carrier', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_carrier'], ['Carrier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Car_name_car'), 'Car', ['name_car'], unique=False)
    op.create_table('Driver',
    sa.Column('first_name_driver', sa.String(length=150), nullable=True),
    sa.Column('last_name_driver', sa.String(length=150), nullable=True),
    sa.Column('surname_driver', sa.String(length=150), nullable=True),
    sa.Column('passport_series', sa.Integer(), nullable=True),
    sa.Column('passport_number', sa.Integer(), nullable=True),
    sa.Column('date_issue', sa.DateTime(timezone=True), nullable=False),
    sa.Column('department_code', sa.Integer(), nullable=True),
    sa.Column('place_issue', sa.String(length=250), nullable=True),
    sa.Column('passport_photo_main', sa.Text(), nullable=True),
    sa.Column('passport_photo_registration', sa.String(), nullable=True),
    sa.Column('id_carrier', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_carrier'], ['Carrier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Order',
    sa.Column('cargo_name', sa.String(length=300), nullable=True),
    sa.Column('departure_address', sa.String(length=350), nullable=True),
    sa.Column('departure_date', sa.DATE(), nullable=True),
    sa.Column('arrival_address', sa.String(length=350), nullable=True),
    sa.Column('arrival_date', sa.DATE(), nullable=True),
    sa.Column('cargo_weight', sa.Double(), nullable=True),
    sa.Column('cargo_dimensions', sa.Double(), nullable=False),
    sa.Column('money', sa.Double(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.BOOLEAN(), nullable=True),
    sa.Column('id_driver', sa.Integer(), nullable=False),
    sa.Column('id_car', sa.Integer(), nullable=False),
    sa.Column('id_customer', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_car'], ['Car.id'], ),
    sa.ForeignKeyConstraint(['id_customer'], ['Customer.id'], ),
    sa.ForeignKeyConstraint(['id_driver'], ['Driver.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Order_arrival_address'), 'Order', ['arrival_address'], unique=False)
    op.create_index(op.f('ix_Order_cargo_name'), 'Order', ['cargo_name'], unique=False)
    op.create_index(op.f('ix_Order_departure_address'), 'Order', ['departure_address'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Order_departure_address'), table_name='Order')
    op.drop_index(op.f('ix_Order_cargo_name'), table_name='Order')
    op.drop_index(op.f('ix_Order_arrival_address'), table_name='Order')
    op.drop_table('Order')
    op.drop_table('Driver')
    op.drop_index(op.f('ix_Car_name_car'), table_name='Car')
    op.drop_table('Car')
    op.drop_index(op.f('ix_Customer_company_name'), table_name='Customer')
    op.drop_table('Customer')
    op.drop_index(op.f('ix_Carrier_company_name'), table_name='Carrier')
    op.drop_table('Carrier')
    # ### end Alembic commands ###
